// =================== DO NOT EDIT THIS FILE ====================
// Generated by Modello 1.8.3,
// any modifications will be overwritten.
// ==============================================================

package com.webix.ui.model.data;

  //---------------------------------/
 //- Imported classes and packages -/
//---------------------------------/

import com.webix.ui.model.AnimateConfig;
import com.webix.ui.model.Baselayout;
import com.webix.ui.model.Baseview;
import com.webix.ui.model.DelimiterConfig;
import com.webix.ui.model.EventHandler;
import com.webix.ui.model.EventHandlerList;
import com.webix.ui.model.GraphItemConfig;
import com.webix.ui.model.NavigationConfig;
import com.webix.ui.model.PaddingConfig;
import com.webix.ui.model.Proto;
import com.webix.ui.model.RGBColorList;
import com.webix.ui.model.TypeConfig;
import com.webix.ui.model.UnknownType;
import com.webix.ui.model.View;
import com.webix.ui.model.auxiliary.Calendar;
import com.webix.ui.model.auxiliary.Colorboard;
import com.webix.ui.model.auxiliary.Pager;
import com.webix.ui.model.auxiliary.Resizer;
import com.webix.ui.model.auxiliary.Spacer;
import com.webix.ui.model.auxiliary.Tooltip;
import com.webix.ui.model.auxiliary.Video;
import com.webix.ui.model.context.Context;
import com.webix.ui.model.context.Contextmenu;
import com.webix.ui.model.context.Datasuggest;
import com.webix.ui.model.context.Gridsuggest;
import com.webix.ui.model.context.Menu;
import com.webix.ui.model.context.Popup;
import com.webix.ui.model.context.Submenu;
import com.webix.ui.model.context.Suggest;
import com.webix.ui.model.context.Window;
import com.webix.ui.model.form.Button;
import com.webix.ui.model.form.Checkbox;
import com.webix.ui.model.form.Colorpicker;
import com.webix.ui.model.form.Combo;
import com.webix.ui.model.form.Counter;
import com.webix.ui.model.form.Datepicker;
import com.webix.ui.model.form.Fieldset;
import com.webix.ui.model.form.Icon;
import com.webix.ui.model.form.Label;
import com.webix.ui.model.form.Multiselect;
import com.webix.ui.model.form.Multitext;
import com.webix.ui.model.form.Radio;
import com.webix.ui.model.form.Richselect;
import com.webix.ui.model.form.Search;
import com.webix.ui.model.form.Segmented;
import com.webix.ui.model.form.Select;
import com.webix.ui.model.form.Slider;
import com.webix.ui.model.form.Tabbar;
import com.webix.ui.model.form.Text;
import com.webix.ui.model.form.Textarea;
import com.webix.ui.model.form.Toggle;
import com.webix.ui.model.html.Htmlform;
import com.webix.ui.model.html.Iframe;
import com.webix.ui.model.html.Scrollview;
import com.webix.ui.model.html.Template;
import com.webix.ui.model.layouts.Accordion;
import com.webix.ui.model.layouts.Accordionitem;
import com.webix.ui.model.layouts.Carousel;
import com.webix.ui.model.layouts.Form;
import com.webix.ui.model.layouts.Headerlayout;
import com.webix.ui.model.layouts.Layout;
import com.webix.ui.model.layouts.Multiview;
import com.webix.ui.model.layouts.Tabview;
import com.webix.ui.model.layouts.Toolbar;





/**
 * A structured table of 2 columns that presents 'name:value' pairs
 * for a list of properties.The component can be used for creating
 * various on-page editors. The value field can be presented by any
 * control - a text field, a checkbox, a drop-down list box etc.
 * Check <a href="http://docs.webix.com//">property</a>
 * documentation for more detailed description.
 * 
 * @version $Revision$ $Date$
 */
@com.webix.ui.model.WebixEvent({
    com.webix.ui.model.Event.ON_AFTER_CONTEXT_MENU,
    com.webix.ui.model.Event.ON_AFTER_EDIT_START,
    com.webix.ui.model.Event.ON_AFTER_EDIT_STOP,
    com.webix.ui.model.Event.ON_AFTER_LOAD,
    com.webix.ui.model.Event.ON_AFTER_RENDER,
    com.webix.ui.model.Event.ON_AFTER_SCROLL,
    com.webix.ui.model.Event.ON_BEFORE_CONTEXT_MENU,
    com.webix.ui.model.Event.ON_BEFORE_EDIT_START,
    com.webix.ui.model.Event.ON_BEFORE_EDIT_STOP,
    com.webix.ui.model.Event.ON_BEFORE_LOAD,
    com.webix.ui.model.Event.ON_BEFORE_RENDER,
    com.webix.ui.model.Event.ON_BIND_REQUEST,
    com.webix.ui.model.Event.ON_DESTRUCT,
    com.webix.ui.model.Event.ON_ITEM_CLICK,
    com.webix.ui.model.Event.ON_ITEM_DBL_CLICK,
    com.webix.ui.model.Event.ON_KEY_PRESS,
    com.webix.ui.model.Event.ON_LIVE_EDIT,
    com.webix.ui.model.Event.ON_LOAD_ERROR,
    com.webix.ui.model.Event.ON_LONG_TOUCH,
    com.webix.ui.model.Event.ON_MOUSE_MOVE,
    com.webix.ui.model.Event.ON_MOUSE_MOVING,
    com.webix.ui.model.Event.ON_MOUSE_OUT,
    com.webix.ui.model.Event.ON_SWIPE_X,
    com.webix.ui.model.Event.ON_SWIPE_Y,
    com.webix.ui.model.Event.ON_TIMED_KEY_PRESS,
    com.webix.ui.model.Event.ON_TOUCH_END,
    com.webix.ui.model.Event.ON_TOUCH_MOVE,
    com.webix.ui.model.Event.ON_TOUCH_START,
    com.webix.ui.model.Event.ON_VIEW_RESIZE
})
@com.webix.ui.model.WebixName("property")
@javax.xml.bind.annotation.XmlRootElement
public class Property
    extends View
    implements java.io.Serializable
{

      //--------------------------/
     //- Class/Member Variables -/
    //--------------------------/

    /**
     * Auto height mode for property view<br /><br /><a
     * href="http://docs.webix.com/api__ui.property_autoheight_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("boolean")
    private Boolean autoheight;

    /**
     * The id or node, whose content will be moved to the view<br
     * /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_content_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("id|element")
    private String content;

    /**
     * Defines which data item is editable (in case of several data
     * item in the cell/line)<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_editvalue_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string")
    private String editValue;

    /**
     * Allows/denies editing in the view<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_editable_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("bool")
    private Boolean editable;

    /**
     * Defines the action on which editors will be opened<br /><br
     * /><a
     * href="http://docs.webix.com/api__link__ui.property_editaction_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string")
    private String editaction;

    /**
     * An array of property items<br /><br /><a
     * href="http://docs.webix.com/api__ui.property_elements_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("object")
    private UnknownType elements;

    /**
     * Linked form<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_form_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string")
    private String form;

    /**
     * The delay between a real mouse action and invoking the
     * related events<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_mouseeventdelay_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("number")
    private Integer mouseEventDelay;

    /**
     * Width of first column ( property names )<br /><br /><a
     * href="http://docs.webix.com/api__ui.property_namewidth_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("number")
    private Integer nameWidth;

    /**
     * Attaches a click behavior for component items with the
     * specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_onclick_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("hash")
    private java.util.Map<String, String> onClick;

    /**
     * A property used to define custom context-click (right click)
     * handlers for elements in the DataTable cells<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_oncontext_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("hash")
    private java.util.Map<String, String> onContext;

    /**
     * Attaches a dblclick behavior for component items with the
     * specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_ondblclick_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("function")
    private java.util.Map<String, String> onDblClick;

    /**
     * Attaches a mousemove behaviour for component items with the
     * specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_onmousemove_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("function")
    private java.util.Map<String, String> onMouseMove;

    /**
     * Enables/disables the scroll bar<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_scroll_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("bool|string")
    private String scroll;

    /**
     * The time during which the component is scrolled to the
     * specified position (in milliseconds)<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_scrollspeed_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string")
    private String scrollSpeed;


      //-----------/
     //- Methods -/
    //-----------/

    /**
     * Get the id or node, whose content will be moved to the
     * view<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_content_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getContent()
    {
        return this.content;
    } //-- String getContent()

    /**
     * Get defines which data item is editable (in case of several
     * data item in the cell/line)<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_editvalue_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getEditValue()
    {
        return this.editValue;
    } //-- String getEditValue()

    /**
     * Get defines the action on which editors will be opened<br
     * /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_editaction_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getEditaction()
    {
        return this.editaction;
    } //-- String getEditaction()

    /**
     * Get an array of property items<br /><br /><a
     * href="http://docs.webix.com/api__ui.property_elements_config.html">Webix
     * API Reference</a>
     * 
     * @return UnknownType
     */
    public UnknownType getElements()
    {
        return this.elements;
    } //-- UnknownType getElements()

    /**
     * Get linked form<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_form_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getForm()
    {
        return this.form;
    } //-- String getForm()

    /**
     * Get the delay between a real mouse action and invoking the
     * related events<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_mouseeventdelay_config.html">Webix
     * API Reference</a>
     * 
     * @return Integer
     */
    public Integer getMouseEventDelay()
    {
        return this.mouseEventDelay;
    } //-- Integer getMouseEventDelay()

    /**
     * Get width of first column ( property names )<br /><br /><a
     * href="http://docs.webix.com/api__ui.property_namewidth_config.html">Webix
     * API Reference</a>
     * 
     * @return Integer
     */
    public Integer getNameWidth()
    {
        return this.nameWidth;
    } //-- Integer getNameWidth()

    /**
     * Get attaches a click behavior for component items with the
     * specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_onclick_config.html">Webix
     * API Reference</a>
     * 
     * @return java.util.Map<String, String>
     */
    public java.util.Map<String, String> getOnClick()
    {
        return this.onClick;
    } //-- java.util.Map<String, String> getOnClick()

    /**
     * Get a property used to define custom context-click (right
     * click) handlers for elements in the DataTable cells<br /><br
     * /><a
     * href="http://docs.webix.com/api__link__ui.property_oncontext_config.html">Webix
     * API Reference</a>
     * 
     * @return java.util.Map<String, String>
     */
    public java.util.Map<String, String> getOnContext()
    {
        return this.onContext;
    } //-- java.util.Map<String, String> getOnContext()

    /**
     * Get attaches a dblclick behavior for component items with
     * the specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_ondblclick_config.html">Webix
     * API Reference</a>
     * 
     * @return java.util.Map<String, String>
     */
    public java.util.Map<String, String> getOnDblClick()
    {
        return this.onDblClick;
    } //-- java.util.Map<String, String> getOnDblClick()

    /**
     * Get attaches a mousemove behaviour for component items with
     * the specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_onmousemove_config.html">Webix
     * API Reference</a>
     * 
     * @return java.util.Map<String, String>
     */
    public java.util.Map<String, String> getOnMouseMove()
    {
        return this.onMouseMove;
    } //-- java.util.Map<String, String> getOnMouseMove()

    /**
     * Get enables/disables the scroll bar<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_scroll_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getScroll()
    {
        return this.scroll;
    } //-- String getScroll()

    /**
     * Get the time during which the component is scrolled to the
     * specified position (in milliseconds)<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_scrollspeed_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getScrollSpeed()
    {
        return this.scrollSpeed;
    } //-- String getScrollSpeed()

    /**
     * Get auto height mode for property view<br /><br /><a
     * href="http://docs.webix.com/api__ui.property_autoheight_config.html">Webix
     * API Reference</a>
     * 
     * @return Boolean
     */
    public Boolean isAutoheight()
    {
        return this.autoheight;
    } //-- Boolean isAutoheight()

    /**
     * Get allows/denies editing in the view<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_editable_config.html">Webix
     * API Reference</a>
     * 
     * @return Boolean
     */
    public Boolean isEditable()
    {
        return this.editable;
    } //-- Boolean isEditable()

    /**
     * Set auto height mode for property view<br /><br /><a
     * href="http://docs.webix.com/api__ui.property_autoheight_config.html">Webix
     * API Reference</a>
     * 
     * @param autoheight
     */
    public void setAutoheight( Boolean autoheight )
    {
        this.autoheight = autoheight;
    } //-- void setAutoheight( Boolean )

    /**
     * Set the id or node, whose content will be moved to the
     * view<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_content_config.html">Webix
     * API Reference</a>
     * 
     * @param content
     */
    public void setContent( String content )
    {
        this.content = content;
    } //-- void setContent( String )

    /**
     * Set defines which data item is editable (in case of several
     * data item in the cell/line)<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_editvalue_config.html">Webix
     * API Reference</a>
     * 
     * @param editValue
     */
    public void setEditValue( String editValue )
    {
        this.editValue = editValue;
    } //-- void setEditValue( String )

    /**
     * Set allows/denies editing in the view<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_editable_config.html">Webix
     * API Reference</a>
     * 
     * @param editable
     */
    public void setEditable( Boolean editable )
    {
        this.editable = editable;
    } //-- void setEditable( Boolean )

    /**
     * Set defines the action on which editors will be opened<br
     * /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_editaction_config.html">Webix
     * API Reference</a>
     * 
     * @param editaction
     */
    public void setEditaction( String editaction )
    {
        this.editaction = editaction;
    } //-- void setEditaction( String )

    /**
     * Set an array of property items<br /><br /><a
     * href="http://docs.webix.com/api__ui.property_elements_config.html">Webix
     * API Reference</a>
     * 
     * @param elements
     */
    public void setElements( UnknownType elements )
    {
        this.elements = elements;
    } //-- void setElements( UnknownType )

    /**
     * Set linked form<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_form_config.html">Webix
     * API Reference</a>
     * 
     * @param form
     */
    public void setForm( String form )
    {
        this.form = form;
    } //-- void setForm( String )

    /**
     * Set the delay between a real mouse action and invoking the
     * related events<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_mouseeventdelay_config.html">Webix
     * API Reference</a>
     * 
     * @param mouseEventDelay
     */
    public void setMouseEventDelay( Integer mouseEventDelay )
    {
        this.mouseEventDelay = mouseEventDelay;
    } //-- void setMouseEventDelay( Integer )

    /**
     * Set width of first column ( property names )<br /><br /><a
     * href="http://docs.webix.com/api__ui.property_namewidth_config.html">Webix
     * API Reference</a>
     * 
     * @param nameWidth
     */
    public void setNameWidth( Integer nameWidth )
    {
        this.nameWidth = nameWidth;
    } //-- void setNameWidth( Integer )

    /**
     * Set attaches a click behavior for component items with the
     * specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_onclick_config.html">Webix
     * API Reference</a>
     * 
     * @param onClick
     */
    public void setOnClick( java.util.Map<String, String> onClick )
    {
        this.onClick = onClick;
    } //-- void setOnClick( java.util.Map<String, String> )

    /**
     * Set a property used to define custom context-click (right
     * click) handlers for elements in the DataTable cells<br /><br
     * /><a
     * href="http://docs.webix.com/api__link__ui.property_oncontext_config.html">Webix
     * API Reference</a>
     * 
     * @param onContext
     */
    public void setOnContext( java.util.Map<String, String> onContext )
    {
        this.onContext = onContext;
    } //-- void setOnContext( java.util.Map<String, String> )

    /**
     * Set attaches a dblclick behavior for component items with
     * the specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_ondblclick_config.html">Webix
     * API Reference</a>
     * 
     * @param onDblClick
     */
    public void setOnDblClick( java.util.Map<String, String> onDblClick )
    {
        this.onDblClick = onDblClick;
    } //-- void setOnDblClick( java.util.Map<String, String> )

    /**
     * Set attaches a mousemove behaviour for component items with
     * the specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_onmousemove_config.html">Webix
     * API Reference</a>
     * 
     * @param onMouseMove
     */
    public void setOnMouseMove( java.util.Map<String, String> onMouseMove )
    {
        this.onMouseMove = onMouseMove;
    } //-- void setOnMouseMove( java.util.Map<String, String> )

    /**
     * Set enables/disables the scroll bar<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_scroll_config.html">Webix
     * API Reference</a>
     * 
     * @param scroll
     */
    public void setScroll( String scroll )
    {
        this.scroll = scroll;
    } //-- void setScroll( String )

    /**
     * Set the time during which the component is scrolled to the
     * specified position (in milliseconds)<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.property_scrollspeed_config.html">Webix
     * API Reference</a>
     * 
     * @param scrollSpeed
     */
    public void setScrollSpeed( String scrollSpeed )
    {
        this.scrollSpeed = scrollSpeed;
    } //-- void setScrollSpeed( String )

}
