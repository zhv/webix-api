// =================== DO NOT EDIT THIS FILE ====================
// Generated by Modello 1.8.3,
// any modifications will be overwritten.
// ==============================================================

package com.webix.ui.model.data;

  //---------------------------------/
 //- Imported classes and packages -/
//---------------------------------/

import com.webix.ui.model.AnimateConfig;
import com.webix.ui.model.Baselayout;
import com.webix.ui.model.Baseview;
import com.webix.ui.model.DelimiterConfig;
import com.webix.ui.model.EventHandler;
import com.webix.ui.model.EventHandlerList;
import com.webix.ui.model.GraphItemConfig;
import com.webix.ui.model.NavigationConfig;
import com.webix.ui.model.PaddingConfig;
import com.webix.ui.model.Proto;
import com.webix.ui.model.RGBColorList;
import com.webix.ui.model.TypeConfig;
import com.webix.ui.model.UnknownType;
import com.webix.ui.model.View;
import com.webix.ui.model.auxiliary.Calendar;
import com.webix.ui.model.auxiliary.Colorboard;
import com.webix.ui.model.auxiliary.Pager;
import com.webix.ui.model.auxiliary.Resizer;
import com.webix.ui.model.auxiliary.Spacer;
import com.webix.ui.model.auxiliary.Tooltip;
import com.webix.ui.model.auxiliary.Video;
import com.webix.ui.model.context.Context;
import com.webix.ui.model.context.Contextmenu;
import com.webix.ui.model.context.Datasuggest;
import com.webix.ui.model.context.Gridsuggest;
import com.webix.ui.model.context.Menu;
import com.webix.ui.model.context.Popup;
import com.webix.ui.model.context.Submenu;
import com.webix.ui.model.context.Suggest;
import com.webix.ui.model.context.Window;
import com.webix.ui.model.form.Button;
import com.webix.ui.model.form.Checkbox;
import com.webix.ui.model.form.Colorpicker;
import com.webix.ui.model.form.Combo;
import com.webix.ui.model.form.Counter;
import com.webix.ui.model.form.Datepicker;
import com.webix.ui.model.form.Fieldset;
import com.webix.ui.model.form.Icon;
import com.webix.ui.model.form.Label;
import com.webix.ui.model.form.Multiselect;
import com.webix.ui.model.form.Multitext;
import com.webix.ui.model.form.Radio;
import com.webix.ui.model.form.Richselect;
import com.webix.ui.model.form.Search;
import com.webix.ui.model.form.Segmented;
import com.webix.ui.model.form.Select;
import com.webix.ui.model.form.Slider;
import com.webix.ui.model.form.Tabbar;
import com.webix.ui.model.form.Text;
import com.webix.ui.model.form.Textarea;
import com.webix.ui.model.form.Toggle;
import com.webix.ui.model.html.Htmlform;
import com.webix.ui.model.html.Iframe;
import com.webix.ui.model.html.Scrollview;
import com.webix.ui.model.html.Template;
import com.webix.ui.model.layouts.Accordion;
import com.webix.ui.model.layouts.Accordionitem;
import com.webix.ui.model.layouts.Carousel;
import com.webix.ui.model.layouts.Form;
import com.webix.ui.model.layouts.Headerlayout;
import com.webix.ui.model.layouts.Layout;
import com.webix.ui.model.layouts.Multiview;
import com.webix.ui.model.layouts.Tabview;
import com.webix.ui.model.layouts.Toolbar;





/**
 * A tool for creating various charts.The library supports the most
 * common chart types:line, spline, area, bar, pie, donut, scatter,
 * radar. You can customize appearance of a chart through colors,
 * tooltips, templates, scales, labels. It's possible to present
 * multiple data sets on the same chart. Check <a
 * href="http://docs.webix.com/desktop__chart.html">chart</a>
 * documentation for more detailed description.
 * 
 * @version $Revision$ $Date$
 */
@com.webix.ui.model.WebixEvent({
    com.webix.ui.model.Event.ON_AFTER_ADD,
    com.webix.ui.model.Event.ON_AFTER_CONTEXT_MENU,
    com.webix.ui.model.Event.ON_AFTER_DELETE,
    com.webix.ui.model.Event.ON_AFTER_LOAD,
    com.webix.ui.model.Event.ON_AFTER_RENDER,
    com.webix.ui.model.Event.ON_AFTER_SCROLL,
    com.webix.ui.model.Event.ON_AFTER_SORT,
    com.webix.ui.model.Event.ON_BEFORE_ADD,
    com.webix.ui.model.Event.ON_BEFORE_CONTEXT_MENU,
    com.webix.ui.model.Event.ON_BEFORE_DELETE,
    com.webix.ui.model.Event.ON_BEFORE_LOAD,
    com.webix.ui.model.Event.ON_BEFORE_RENDER,
    com.webix.ui.model.Event.ON_BEFORE_SORT,
    com.webix.ui.model.Event.ON_BIND_REQUEST,
    com.webix.ui.model.Event.ON_DATA_REQUEST,
    com.webix.ui.model.Event.ON_DATA_UPDATE,
    com.webix.ui.model.Event.ON_DESTRUCT,
    com.webix.ui.model.Event.ON_ITEM_CLICK,
    com.webix.ui.model.Event.ON_ITEM_DBL_CLICK,
    com.webix.ui.model.Event.ON_KEY_PRESS,
    com.webix.ui.model.Event.ON_LOAD_ERROR,
    com.webix.ui.model.Event.ON_LONG_TOUCH,
    com.webix.ui.model.Event.ON_MOUSE_MOVE,
    com.webix.ui.model.Event.ON_MOUSE_MOVING,
    com.webix.ui.model.Event.ON_MOUSE_OUT,
    com.webix.ui.model.Event.ON_SWIPE_X,
    com.webix.ui.model.Event.ON_SWIPE_Y,
    com.webix.ui.model.Event.ON_TIMED_KEY_PRESS,
    com.webix.ui.model.Event.ON_TOUCH_END,
    com.webix.ui.model.Event.ON_TOUCH_MOVE,
    com.webix.ui.model.Event.ON_TOUCH_START,
    com.webix.ui.model.Event.ON_VIEW_RESIZE
})
@com.webix.ui.model.WebixName("chart")
@javax.xml.bind.annotation.XmlRootElement
public class Chart
    extends View
    implements java.io.Serializable
{

      //--------------------------/
     //- Class/Member Variables -/
    //--------------------------/

    /**
     * Defines the opacity of chart items<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_alpha_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("number")
    private Integer alpha;

    /**
     * The width of bars<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_barwidth_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("number")
    private Integer barWidth;

    /**
     * Enables/disables the bar borders<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_border_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("bool")
    private Boolean border;

    /**
     * Sets the border color of each item in the graph<br /><br
     * /><a
     * href="http://docs.webix.com/api__ui.chart_bordercolor_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string")
    private String borderColor;

    /**
     * Defines the slope angle of 3D pie<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_cant_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("number")
    private Integer cant;

    /**
     * Defines items colors<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_color_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string|function")
    private String color;

    /**
     * Disapbles graph lines with radar chart<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_disablelines_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("bool")
    private Boolean disableLines;

    /**
     * Sets the radius (in pixels) of the virtual circle which
     * events will fire for items within<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_eventradius_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("number")
    private Integer eventRadius;

    /**
     * Fills the chart area with the specified background color.<br
     * /><br /><a
     * href="http://docs.webix.com/api__ui.chart_fill_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string")
    private String fill;

    /**
     * Chart max limit mode<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_fixoverflow_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("bool")
    private Boolean fixOverflow;

    /**
     * Specifies the chart gradient<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_gradient_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("bool|string|function")
    private String gradient;

    /**
     * Defines markers that present chart's data items.<br /><br
     * /><a
     * href="http://docs.webix.com/api__ui.chart_item_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("object")
    private RGBColorList item;

    /**
     * Sets the template for items' labels<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_label_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string|function")
    private String label;

    /**
     * The offset of sector labels from the pie frame<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_labeloffset_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("number")
    private Integer labelOffset;

    /**
     * Defines the chart legend<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_legend_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("object")
    private UnknownType legend;

    /**
     * Defines chart lines<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_line_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("object")
    private UnknownType line;

    /**
     * Sets the color for strips dividing the pie sectors<br /><br
     * /><a
     * href="http://docs.webix.com/api__ui.chart_linecolor_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string")
    private String lineColor;

    /**
     * The delay between a real mouse action and invoking the
     * related events<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.chart_mouseeventdelay_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("number")
    private Integer mouseEventDelay;

    /**
     * Defines whether the first item of the scale will be drawn
     * with the offset equal to the half of the scale's step
     * (relative to the origin of the chart) or not.<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_offset_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("bool")
    private Boolean offset;

    /**
     * Attaches a click behavior for component items with the
     * specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.chart_onclick_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("hash")
    private java.util.Map<String, String> onClick;

    /**
     * A property used to define custom context-click (right click)
     * handlers for elements in the DataTable cells<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.chart_oncontext_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("hash")
    private java.util.Map<String, String> onContext;

    /**
     * Attaches a dblclick behavior for component items with the
     * specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.chart_ondblclick_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("function")
    private java.util.Map<String, String> onDblClick;

    /**
     * Attaches a mousemove behaviour for component items with the
     * specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.chart_onmousemove_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("function")
    private java.util.Map<String, String> onMouseMove;

    /**
     * Sets the scale origin<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_origin_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("number")
    private Integer origin;

    /**
     * Sets paddings of the chart content<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_padding_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("object")
    private PaddingConfig padding;

    /**
     * The height of the 3d pie<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_pieheight_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("number")
    private Integer pieHeight;

    /**
     * Sets the template for the pie inner labels<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_pieinnertext_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string|function")
    private String pieInnerText;

    /**
     * Applies the predefined chart configuration object with the
     * specified name<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_preset_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string")
    private String preset;

    /**
     * The radius of the bar's rounding<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_radius_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("number")
    private Integer radius;

    /**
     * Type of chart scale, logarithic or plain<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_scale_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string")
    private String scale;

    /**
     * Defines graphs presented on the chart<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_series_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("array")
    private UnknownType series;

    /**
     * Enables/disables the pie shadow<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_shadow_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("bool")
    private Boolean shadow;

    /**
     * Sets the chart type<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_type_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string")
    private String type;

    /**
     * Defines values for the vertical axis<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_value_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("template")
    private String value;

    /**
     * The horizontal position of the pie center<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_x_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("number")
    private Integer x;

    /**
     * Defines the horizontal axis<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_xaxis_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("object")
    private UnknownType xAxis;

    /**
     * A property of the dataset that defines values for the
     * horizontal axis<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_xvalue_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string")
    private String xValue;

    /**
     * The vertical position of the pie center<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_y_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("number")
    private Integer y;

    /**
     * Defines the vertical axis<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_yaxis_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("object")
    private UnknownType yAxis;

    /**
     * A property of the dataset that defines values for the
     * vertical axis.<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_yvalue_config.html">Webix
     * API Reference</a>
     */
    @com.webix.ui.model.WebixType("string")
    private String yValue;


      //-----------/
     //- Methods -/
    //-----------/

    /**
     * Get defines the opacity of chart items<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_alpha_config.html">Webix
     * API Reference</a>
     * 
     * @return Integer
     */
    public Integer getAlpha()
    {
        return this.alpha;
    } //-- Integer getAlpha()

    /**
     * Get the width of bars<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_barwidth_config.html">Webix
     * API Reference</a>
     * 
     * @return Integer
     */
    public Integer getBarWidth()
    {
        return this.barWidth;
    } //-- Integer getBarWidth()

    /**
     * Get sets the border color of each item in the graph<br /><br
     * /><a
     * href="http://docs.webix.com/api__ui.chart_bordercolor_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getBorderColor()
    {
        return this.borderColor;
    } //-- String getBorderColor()

    /**
     * Get defines the slope angle of 3D pie<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_cant_config.html">Webix
     * API Reference</a>
     * 
     * @return Integer
     */
    public Integer getCant()
    {
        return this.cant;
    } //-- Integer getCant()

    /**
     * Get defines items colors<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_color_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getColor()
    {
        return this.color;
    } //-- String getColor()

    /**
     * Get sets the radius (in pixels) of the virtual circle which
     * events will fire for items within<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_eventradius_config.html">Webix
     * API Reference</a>
     * 
     * @return Integer
     */
    public Integer getEventRadius()
    {
        return this.eventRadius;
    } //-- Integer getEventRadius()

    /**
     * Get fills the chart area with the specified background
     * color.<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_fill_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getFill()
    {
        return this.fill;
    } //-- String getFill()

    /**
     * Get specifies the chart gradient<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_gradient_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getGradient()
    {
        return this.gradient;
    } //-- String getGradient()

    /**
     * Get defines markers that present chart's data items.<br
     * /><br /><a
     * href="http://docs.webix.com/api__ui.chart_item_config.html">Webix
     * API Reference</a>
     * 
     * @return RGBColorList
     */
    public RGBColorList getItem()
    {
        return this.item;
    } //-- RGBColorList getItem()

    /**
     * Get sets the template for items' labels<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_label_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getLabel()
    {
        return this.label;
    } //-- String getLabel()

    /**
     * Get the offset of sector labels from the pie frame<br /><br
     * /><a
     * href="http://docs.webix.com/api__ui.chart_labeloffset_config.html">Webix
     * API Reference</a>
     * 
     * @return Integer
     */
    public Integer getLabelOffset()
    {
        return this.labelOffset;
    } //-- Integer getLabelOffset()

    /**
     * Get defines the chart legend<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_legend_config.html">Webix
     * API Reference</a>
     * 
     * @return UnknownType
     */
    public UnknownType getLegend()
    {
        return this.legend;
    } //-- UnknownType getLegend()

    /**
     * Get defines chart lines<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_line_config.html">Webix
     * API Reference</a>
     * 
     * @return UnknownType
     */
    public UnknownType getLine()
    {
        return this.line;
    } //-- UnknownType getLine()

    /**
     * Get sets the color for strips dividing the pie sectors<br
     * /><br /><a
     * href="http://docs.webix.com/api__ui.chart_linecolor_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getLineColor()
    {
        return this.lineColor;
    } //-- String getLineColor()

    /**
     * Get the delay between a real mouse action and invoking the
     * related events<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.chart_mouseeventdelay_config.html">Webix
     * API Reference</a>
     * 
     * @return Integer
     */
    public Integer getMouseEventDelay()
    {
        return this.mouseEventDelay;
    } //-- Integer getMouseEventDelay()

    /**
     * Get attaches a click behavior for component items with the
     * specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.chart_onclick_config.html">Webix
     * API Reference</a>
     * 
     * @return java.util.Map<String, String>
     */
    public java.util.Map<String, String> getOnClick()
    {
        return this.onClick;
    } //-- java.util.Map<String, String> getOnClick()

    /**
     * Get a property used to define custom context-click (right
     * click) handlers for elements in the DataTable cells<br /><br
     * /><a
     * href="http://docs.webix.com/api__link__ui.chart_oncontext_config.html">Webix
     * API Reference</a>
     * 
     * @return java.util.Map<String, String>
     */
    public java.util.Map<String, String> getOnContext()
    {
        return this.onContext;
    } //-- java.util.Map<String, String> getOnContext()

    /**
     * Get attaches a dblclick behavior for component items with
     * the specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.chart_ondblclick_config.html">Webix
     * API Reference</a>
     * 
     * @return java.util.Map<String, String>
     */
    public java.util.Map<String, String> getOnDblClick()
    {
        return this.onDblClick;
    } //-- java.util.Map<String, String> getOnDblClick()

    /**
     * Get attaches a mousemove behaviour for component items with
     * the specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.chart_onmousemove_config.html">Webix
     * API Reference</a>
     * 
     * @return java.util.Map<String, String>
     */
    public java.util.Map<String, String> getOnMouseMove()
    {
        return this.onMouseMove;
    } //-- java.util.Map<String, String> getOnMouseMove()

    /**
     * Get sets the scale origin<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_origin_config.html">Webix
     * API Reference</a>
     * 
     * @return Integer
     */
    public Integer getOrigin()
    {
        return this.origin;
    } //-- Integer getOrigin()

    /**
     * Get sets paddings of the chart content<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_padding_config.html">Webix
     * API Reference</a>
     * 
     * @return PaddingConfig
     */
    public PaddingConfig getPadding()
    {
        return this.padding;
    } //-- PaddingConfig getPadding()

    /**
     * Get the height of the 3d pie<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_pieheight_config.html">Webix
     * API Reference</a>
     * 
     * @return Integer
     */
    public Integer getPieHeight()
    {
        return this.pieHeight;
    } //-- Integer getPieHeight()

    /**
     * Get sets the template for the pie inner labels<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_pieinnertext_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getPieInnerText()
    {
        return this.pieInnerText;
    } //-- String getPieInnerText()

    /**
     * Get applies the predefined chart configuration object with
     * the specified name<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_preset_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getPreset()
    {
        return this.preset;
    } //-- String getPreset()

    /**
     * Get the radius of the bar's rounding<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_radius_config.html">Webix
     * API Reference</a>
     * 
     * @return Integer
     */
    public Integer getRadius()
    {
        return this.radius;
    } //-- Integer getRadius()

    /**
     * Get type of chart scale, logarithic or plain<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_scale_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getScale()
    {
        return this.scale;
    } //-- String getScale()

    /**
     * Get defines graphs presented on the chart<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_series_config.html">Webix
     * API Reference</a>
     * 
     * @return UnknownType
     */
    public UnknownType getSeries()
    {
        return this.series;
    } //-- UnknownType getSeries()

    /**
     * Get sets the chart type<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_type_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getType()
    {
        return this.type;
    } //-- String getType()

    /**
     * Get defines values for the vertical axis<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_value_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getValue()
    {
        return this.value;
    } //-- String getValue()

    /**
     * Get the horizontal position of the pie center<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_x_config.html">Webix
     * API Reference</a>
     * 
     * @return Integer
     */
    public Integer getX()
    {
        return this.x;
    } //-- Integer getX()

    /**
     * Get defines the horizontal axis<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_xaxis_config.html">Webix
     * API Reference</a>
     * 
     * @return UnknownType
     */
    public UnknownType getXAxis()
    {
        return this.xAxis;
    } //-- UnknownType getXAxis()

    /**
     * Get a property of the dataset that defines values for the
     * horizontal axis<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_xvalue_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getXValue()
    {
        return this.xValue;
    } //-- String getXValue()

    /**
     * Get the vertical position of the pie center<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_y_config.html">Webix
     * API Reference</a>
     * 
     * @return Integer
     */
    public Integer getY()
    {
        return this.y;
    } //-- Integer getY()

    /**
     * Get defines the vertical axis<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_yaxis_config.html">Webix
     * API Reference</a>
     * 
     * @return UnknownType
     */
    public UnknownType getYAxis()
    {
        return this.yAxis;
    } //-- UnknownType getYAxis()

    /**
     * Get a property of the dataset that defines values for the
     * vertical axis.<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_yvalue_config.html">Webix
     * API Reference</a>
     * 
     * @return String
     */
    public String getYValue()
    {
        return this.yValue;
    } //-- String getYValue()

    /**
     * Get enables/disables the bar borders<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_border_config.html">Webix
     * API Reference</a>
     * 
     * @return Boolean
     */
    public Boolean isBorder()
    {
        return this.border;
    } //-- Boolean isBorder()

    /**
     * Get disapbles graph lines with radar chart<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_disablelines_config.html">Webix
     * API Reference</a>
     * 
     * @return Boolean
     */
    public Boolean isDisableLines()
    {
        return this.disableLines;
    } //-- Boolean isDisableLines()

    /**
     * Get chart max limit mode<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_fixoverflow_config.html">Webix
     * API Reference</a>
     * 
     * @return Boolean
     */
    public Boolean isFixOverflow()
    {
        return this.fixOverflow;
    } //-- Boolean isFixOverflow()

    /**
     * Get defines whether the first item of the scale will be
     * drawn with the offset equal to the half of the scale's step
     * (relative to the origin of the chart) or not.<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_offset_config.html">Webix
     * API Reference</a>
     * 
     * @return Boolean
     */
    public Boolean isOffset()
    {
        return this.offset;
    } //-- Boolean isOffset()

    /**
     * Get enables/disables the pie shadow<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_shadow_config.html">Webix
     * API Reference</a>
     * 
     * @return Boolean
     */
    public Boolean isShadow()
    {
        return this.shadow;
    } //-- Boolean isShadow()

    /**
     * Set defines the opacity of chart items<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_alpha_config.html">Webix
     * API Reference</a>
     * 
     * @param alpha
     */
    public void setAlpha( Integer alpha )
    {
        this.alpha = alpha;
    } //-- void setAlpha( Integer )

    /**
     * Set the width of bars<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_barwidth_config.html">Webix
     * API Reference</a>
     * 
     * @param barWidth
     */
    public void setBarWidth( Integer barWidth )
    {
        this.barWidth = barWidth;
    } //-- void setBarWidth( Integer )

    /**
     * Set enables/disables the bar borders<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_border_config.html">Webix
     * API Reference</a>
     * 
     * @param border
     */
    public void setBorder( Boolean border )
    {
        this.border = border;
    } //-- void setBorder( Boolean )

    /**
     * Set sets the border color of each item in the graph<br /><br
     * /><a
     * href="http://docs.webix.com/api__ui.chart_bordercolor_config.html">Webix
     * API Reference</a>
     * 
     * @param borderColor
     */
    public void setBorderColor( String borderColor )
    {
        this.borderColor = borderColor;
    } //-- void setBorderColor( String )

    /**
     * Set defines the slope angle of 3D pie<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_cant_config.html">Webix
     * API Reference</a>
     * 
     * @param cant
     */
    public void setCant( Integer cant )
    {
        this.cant = cant;
    } //-- void setCant( Integer )

    /**
     * Set defines items colors<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_color_config.html">Webix
     * API Reference</a>
     * 
     * @param color
     */
    public void setColor( String color )
    {
        this.color = color;
    } //-- void setColor( String )

    /**
     * Set disapbles graph lines with radar chart<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_disablelines_config.html">Webix
     * API Reference</a>
     * 
     * @param disableLines
     */
    public void setDisableLines( Boolean disableLines )
    {
        this.disableLines = disableLines;
    } //-- void setDisableLines( Boolean )

    /**
     * Set sets the radius (in pixels) of the virtual circle which
     * events will fire for items within<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_eventradius_config.html">Webix
     * API Reference</a>
     * 
     * @param eventRadius
     */
    public void setEventRadius( Integer eventRadius )
    {
        this.eventRadius = eventRadius;
    } //-- void setEventRadius( Integer )

    /**
     * Set fills the chart area with the specified background
     * color.<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_fill_config.html">Webix
     * API Reference</a>
     * 
     * @param fill
     */
    public void setFill( String fill )
    {
        this.fill = fill;
    } //-- void setFill( String )

    /**
     * Set chart max limit mode<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_fixoverflow_config.html">Webix
     * API Reference</a>
     * 
     * @param fixOverflow
     */
    public void setFixOverflow( Boolean fixOverflow )
    {
        this.fixOverflow = fixOverflow;
    } //-- void setFixOverflow( Boolean )

    /**
     * Set specifies the chart gradient<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_gradient_config.html">Webix
     * API Reference</a>
     * 
     * @param gradient
     */
    public void setGradient( String gradient )
    {
        this.gradient = gradient;
    } //-- void setGradient( String )

    /**
     * Set defines markers that present chart's data items.<br
     * /><br /><a
     * href="http://docs.webix.com/api__ui.chart_item_config.html">Webix
     * API Reference</a>
     * 
     * @param item
     */
    public void setItem( RGBColorList item )
    {
        this.item = item;
    } //-- void setItem( RGBColorList )

    /**
     * Set sets the template for items' labels<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_label_config.html">Webix
     * API Reference</a>
     * 
     * @param label
     */
    public void setLabel( String label )
    {
        this.label = label;
    } //-- void setLabel( String )

    /**
     * Set the offset of sector labels from the pie frame<br /><br
     * /><a
     * href="http://docs.webix.com/api__ui.chart_labeloffset_config.html">Webix
     * API Reference</a>
     * 
     * @param labelOffset
     */
    public void setLabelOffset( Integer labelOffset )
    {
        this.labelOffset = labelOffset;
    } //-- void setLabelOffset( Integer )

    /**
     * Set defines the chart legend<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_legend_config.html">Webix
     * API Reference</a>
     * 
     * @param legend
     */
    public void setLegend( UnknownType legend )
    {
        this.legend = legend;
    } //-- void setLegend( UnknownType )

    /**
     * Set defines chart lines<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_line_config.html">Webix
     * API Reference</a>
     * 
     * @param line
     */
    public void setLine( UnknownType line )
    {
        this.line = line;
    } //-- void setLine( UnknownType )

    /**
     * Set sets the color for strips dividing the pie sectors<br
     * /><br /><a
     * href="http://docs.webix.com/api__ui.chart_linecolor_config.html">Webix
     * API Reference</a>
     * 
     * @param lineColor
     */
    public void setLineColor( String lineColor )
    {
        this.lineColor = lineColor;
    } //-- void setLineColor( String )

    /**
     * Set the delay between a real mouse action and invoking the
     * related events<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.chart_mouseeventdelay_config.html">Webix
     * API Reference</a>
     * 
     * @param mouseEventDelay
     */
    public void setMouseEventDelay( Integer mouseEventDelay )
    {
        this.mouseEventDelay = mouseEventDelay;
    } //-- void setMouseEventDelay( Integer )

    /**
     * Set defines whether the first item of the scale will be
     * drawn with the offset equal to the half of the scale's step
     * (relative to the origin of the chart) or not.<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_offset_config.html">Webix
     * API Reference</a>
     * 
     * @param offset
     */
    public void setOffset( Boolean offset )
    {
        this.offset = offset;
    } //-- void setOffset( Boolean )

    /**
     * Set attaches a click behavior for component items with the
     * specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.chart_onclick_config.html">Webix
     * API Reference</a>
     * 
     * @param onClick
     */
    public void setOnClick( java.util.Map<String, String> onClick )
    {
        this.onClick = onClick;
    } //-- void setOnClick( java.util.Map<String, String> )

    /**
     * Set a property used to define custom context-click (right
     * click) handlers for elements in the DataTable cells<br /><br
     * /><a
     * href="http://docs.webix.com/api__link__ui.chart_oncontext_config.html">Webix
     * API Reference</a>
     * 
     * @param onContext
     */
    public void setOnContext( java.util.Map<String, String> onContext )
    {
        this.onContext = onContext;
    } //-- void setOnContext( java.util.Map<String, String> )

    /**
     * Set attaches a dblclick behavior for component items with
     * the specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.chart_ondblclick_config.html">Webix
     * API Reference</a>
     * 
     * @param onDblClick
     */
    public void setOnDblClick( java.util.Map<String, String> onDblClick )
    {
        this.onDblClick = onDblClick;
    } //-- void setOnDblClick( java.util.Map<String, String> )

    /**
     * Set attaches a mousemove behaviour for component items with
     * the specified CSS class.<br /><br /><a
     * href="http://docs.webix.com/api__link__ui.chart_onmousemove_config.html">Webix
     * API Reference</a>
     * 
     * @param onMouseMove
     */
    public void setOnMouseMove( java.util.Map<String, String> onMouseMove )
    {
        this.onMouseMove = onMouseMove;
    } //-- void setOnMouseMove( java.util.Map<String, String> )

    /**
     * Set sets the scale origin<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_origin_config.html">Webix
     * API Reference</a>
     * 
     * @param origin
     */
    public void setOrigin( Integer origin )
    {
        this.origin = origin;
    } //-- void setOrigin( Integer )

    /**
     * Set sets paddings of the chart content<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_padding_config.html">Webix
     * API Reference</a>
     * 
     * @param padding
     */
    public void setPadding( PaddingConfig padding )
    {
        this.padding = padding;
    } //-- void setPadding( PaddingConfig )

    /**
     * Set the height of the 3d pie<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_pieheight_config.html">Webix
     * API Reference</a>
     * 
     * @param pieHeight
     */
    public void setPieHeight( Integer pieHeight )
    {
        this.pieHeight = pieHeight;
    } //-- void setPieHeight( Integer )

    /**
     * Set sets the template for the pie inner labels<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_pieinnertext_config.html">Webix
     * API Reference</a>
     * 
     * @param pieInnerText
     */
    public void setPieInnerText( String pieInnerText )
    {
        this.pieInnerText = pieInnerText;
    } //-- void setPieInnerText( String )

    /**
     * Set applies the predefined chart configuration object with
     * the specified name<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_preset_config.html">Webix
     * API Reference</a>
     * 
     * @param preset
     */
    public void setPreset( String preset )
    {
        this.preset = preset;
    } //-- void setPreset( String )

    /**
     * Set the radius of the bar's rounding<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_radius_config.html">Webix
     * API Reference</a>
     * 
     * @param radius
     */
    public void setRadius( Integer radius )
    {
        this.radius = radius;
    } //-- void setRadius( Integer )

    /**
     * Set type of chart scale, logarithic or plain<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_scale_config.html">Webix
     * API Reference</a>
     * 
     * @param scale
     */
    public void setScale( String scale )
    {
        this.scale = scale;
    } //-- void setScale( String )

    /**
     * Set defines graphs presented on the chart<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_series_config.html">Webix
     * API Reference</a>
     * 
     * @param series
     */
    public void setSeries( UnknownType series )
    {
        this.series = series;
    } //-- void setSeries( UnknownType )

    /**
     * Set enables/disables the pie shadow<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_shadow_config.html">Webix
     * API Reference</a>
     * 
     * @param shadow
     */
    public void setShadow( Boolean shadow )
    {
        this.shadow = shadow;
    } //-- void setShadow( Boolean )

    /**
     * Set sets the chart type<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_type_config.html">Webix
     * API Reference</a>
     * 
     * @param type
     */
    public void setType( String type )
    {
        this.type = type;
    } //-- void setType( String )

    /**
     * Set defines values for the vertical axis<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_value_config.html">Webix
     * API Reference</a>
     * 
     * @param value
     */
    public void setValue( String value )
    {
        this.value = value;
    } //-- void setValue( String )

    /**
     * Set the horizontal position of the pie center<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_x_config.html">Webix
     * API Reference</a>
     * 
     * @param x
     */
    public void setX( Integer x )
    {
        this.x = x;
    } //-- void setX( Integer )

    /**
     * Set defines the horizontal axis<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_xaxis_config.html">Webix
     * API Reference</a>
     * 
     * @param xAxis
     */
    public void setXAxis( UnknownType xAxis )
    {
        this.xAxis = xAxis;
    } //-- void setXAxis( UnknownType )

    /**
     * Set a property of the dataset that defines values for the
     * horizontal axis<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_xvalue_config.html">Webix
     * API Reference</a>
     * 
     * @param xValue
     */
    public void setXValue( String xValue )
    {
        this.xValue = xValue;
    } //-- void setXValue( String )

    /**
     * Set the vertical position of the pie center<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_y_config.html">Webix
     * API Reference</a>
     * 
     * @param y
     */
    public void setY( Integer y )
    {
        this.y = y;
    } //-- void setY( Integer )

    /**
     * Set defines the vertical axis<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_yaxis_config.html">Webix
     * API Reference</a>
     * 
     * @param yAxis
     */
    public void setYAxis( UnknownType yAxis )
    {
        this.yAxis = yAxis;
    } //-- void setYAxis( UnknownType )

    /**
     * Set a property of the dataset that defines values for the
     * vertical axis.<br /><br /><a
     * href="http://docs.webix.com/api__ui.chart_yvalue_config.html">Webix
     * API Reference</a>
     * 
     * @param yValue
     */
    public void setYValue( String yValue )
    {
        this.yValue = yValue;
    } //-- void setYValue( String )

}
